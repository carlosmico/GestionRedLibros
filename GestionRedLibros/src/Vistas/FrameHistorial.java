/*
 * Copyright (C) 2019 Jose Sanchis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package Vistas;

import Daos.DaoCurso;
import Daos.DaoEjemplar;
import Pojos.Alumno;
import Pojos.Curso;
import Pojos.Ejemplar;
import Pojos.Historial;
import Renders.RemarcarCeldas;
import Utilidades.Colores;
import Utilidades.Estado;
import Utilidades.Imagenes.Imagenes;
import Vistas.FramePopup;
import Vistas.Main;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import org.hibernate.Session;

/**
 *
 * @author Jose Sanchis
 */
public class FrameHistorial extends javax.swing.JFrame {

    private Session session = Main.gestorSesiones.getSession();

    //Cremaos el frame de Cargar
    private FramePopup framePopup;

    private FrameDetalleHistorial frameDetalle;

    private DaoEjemplar daoEjemplar;
    private DaoCurso daoCurso;

    public Ejemplar ejemplar;

    //Listas
    public List<Historial> listaHistoriales;
    public List<Alumno> listaAlumnos;

    public static boolean isCellSelected = false;

    private String defaultText = "Codigo ejemplar...";
    private String campoBusquedaTemp = "";

    //Cogemos el frame padre para trabajar con los dialogos
    private JFrame topFrame;

    /**
     * Creates new form FrameDevoluciones
     */
    public FrameHistorial() {
        initComponents();

        //<editor-fold defaultstate="collapsed" desc="Configuracion colores tabla">
        jScrollPane1.getViewport().setBackground(Colores.fondo);
        JTableHeader anHeader = tablaAlumnos.getTableHeader();
        anHeader.setForeground(Colores.letraNormal);
        anHeader.setBackground(Colores.fondo);

        //Deshabilitamos la edicion de las celdas en las tablas
        tablaAlumnos.setDefaultEditor(Object.class, null);
        tablaAlumnos.getTableHeader().setReorderingAllowed(false);
//</editor-fold>

        topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);

        daoEjemplar = new DaoEjemplar(session);
        daoCurso = new DaoCurso(session);

        this.setLocationRelativeTo(null);

        //Maximizamos la pesta√±a
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);

        //<editor-fold defaultstate="collapsed" desc="Click Tabla">
        tablaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tablaAlumnos.rowAtPoint(evt.getPoint());

                frameDetalle = new FrameDetalleHistorial(listaHistoriales.get(row));

                frameDetalle.setVisible(true);
            }
        });
//</editor-fold>

        vaciarDatosEjemplar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        glossPainter1 = new org.jdesktop.swingx.painter.GlossPainter();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelInformacion = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        panelDatos = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        textCodigoEjemplar = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        textNombreEjemplar = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        textAsignaturaEjemplar = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        textCursoEjemplar = new javax.swing.JLabel();
        panelEstadoInicialParent = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        panelEstadoInicial = new javax.swing.JPanel();
        btnBadStatus = new javax.swing.JLabel();
        btnRegularStatus = new javax.swing.JLabel();
        btnGoodStatus = new javax.swing.JLabel();
        panelBusquedaEjemplar = new javax.swing.JPanel();
        textBusquedaEjemplar = new javax.swing.JTextField();
        btnBusquedaEjemplar = new com.mommoo.flat.button.FlatButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Historial");
        setMinimumSize(new java.awt.Dimension(1024, 768));

        jPanel1.setBackground(Colores.fondoOscuro);
        jPanel1.setPreferredSize(new java.awt.Dimension(1137, 75));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(Colores.letraTitulo);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Historial");
        jLabel1.setPreferredSize(new java.awt.Dimension(122, 75));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(Colores.fondo);

        jScrollPane4.setBorder(null);
        jScrollPane4.setMinimumSize(new java.awt.Dimension(1024, 18));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(1024, 500));

        panelInformacion.setBackground(Colores.fondo);
        panelInformacion.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelInformacion.setMinimumSize(new java.awt.Dimension(1000, 0));
        panelInformacion.setPreferredSize(new java.awt.Dimension(1000, 500));

        jPanel4.setBackground(Colores.fondo);

        jScrollPane1.setBackground(Colores.fondo);

        tablaAlumnos.setAutoCreateRowSorter(true);
        tablaAlumnos.setBackground(Colores.fondo);
        tablaAlumnos.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tablaAlumnos.setForeground(Colores.letraNormal);
        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NIA", "Nombre", "Curso", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaAlumnos.setOpaque(false);
        tablaAlumnos.setRowHeight(32);
        tablaAlumnos.setRowSelectionAllowed(false);
        tablaAlumnos.setSelectionBackground(Colores.accento);
        tablaAlumnos.setSelectionForeground(Colores.letraBotones);
        tablaAlumnos.getTableHeader().setReorderingAllowed(false);
        tablaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAlumnos);
        if (tablaAlumnos.getColumnModel().getColumnCount() > 0) {
            tablaAlumnos.getColumnModel().getColumn(0).setResizable(false);
            tablaAlumnos.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        );

        panelDatos.setBackground(Colores.fondo);
        panelDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(Colores.letraNormal);
        jLabel5.setText("Informaci√≥n General:");

        jPanel2.setBackground(Colores.fondo);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(Colores.letraNormal);
        jLabel4.setText("C√≥digo de ejemplar:");

        textCodigoEjemplar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textCodigoEjemplar.setForeground(Colores.letraNormal);
        textCodigoEjemplar.setMinimumSize(new java.awt.Dimension(125, 32));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(textCodigoEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textCodigoEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(Colores.fondo);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(Colores.letraNormal);
        jLabel7.setText("Nombre del ejemplar:");

        textNombreEjemplar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNombreEjemplar.setForeground(Colores.letraNormal);
        textNombreEjemplar.setMinimumSize(new java.awt.Dimension(125, 32));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(textNombreEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 214, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNombreEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(Colores.fondo);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(Colores.letraNormal);
        jLabel8.setText("Asignatura:");

        textAsignaturaEjemplar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textAsignaturaEjemplar.setForeground(Colores.letraNormal);
        textAsignaturaEjemplar.setMinimumSize(new java.awt.Dimension(125, 32));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(textAsignaturaEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textAsignaturaEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(Colores.fondo);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(Colores.letraNormal);
        jLabel13.setText("Curso:");

        textCursoEjemplar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textCursoEjemplar.setForeground(Colores.letraNormal);
        textCursoEjemplar.setMinimumSize(new java.awt.Dimension(125, 32));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(textCursoEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 114, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textCursoEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelEstadoInicialParent.setBackground(Colores.fondo);

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel29.setForeground(Colores.letraNormal);
        jLabel29.setText("Estado:");

        panelEstadoInicial.setBackground(Colores.fondo);
        panelEstadoInicial.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

        btnBadStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBadStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bad_disabled.png"))); // NOI18N
        panelEstadoInicial.add(btnBadStatus);

        btnRegularStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRegularStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/regular_disabled.png"))); // NOI18N
        panelEstadoInicial.add(btnRegularStatus);

        btnGoodStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnGoodStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/good.png"))); // NOI18N
        panelEstadoInicial.add(btnGoodStatus);

        javax.swing.GroupLayout panelEstadoInicialParentLayout = new javax.swing.GroupLayout(panelEstadoInicialParent);
        panelEstadoInicialParent.setLayout(panelEstadoInicialParentLayout);
        panelEstadoInicialParentLayout.setHorizontalGroup(
            panelEstadoInicialParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEstadoInicialParentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEstadoInicialParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEstadoInicialParentLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(panelEstadoInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
                    .addGroup(panelEstadoInicialParentLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelEstadoInicialParentLayout.setVerticalGroup(
            panelEstadoInicialParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEstadoInicialParentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEstadoInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelDatosLayout = new javax.swing.GroupLayout(panelDatos);
        panelDatos.setLayout(panelDatosLayout);
        panelDatosLayout.setHorizontalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDatosLayout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelEstadoInicialParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(144, Short.MAX_VALUE))))
        );
        panelDatosLayout.setVerticalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelEstadoInicialParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        panelBusquedaEjemplar.setBackground(Colores.fondo);

        textBusquedaEjemplar.setBackground(Colores.fondo);
        textBusquedaEjemplar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textBusquedaEjemplar.setForeground(Colores.letraNormal);
        textBusquedaEjemplar.setText("C√≥digo ejemplar...");
        textBusquedaEjemplar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        textBusquedaEjemplar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textBusquedaEjemplarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textBusquedaEjemplarFocusLost(evt);
            }
        });
        textBusquedaEjemplar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textBusquedaEjemplarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textBusquedaEjemplarKeyReleased(evt);
            }
        });

        btnBusquedaEjemplar.setBackground(Colores.botones);
        btnBusquedaEjemplar.setForeground(Colores.letraBotones);
        btnBusquedaEjemplar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons/magnify.png"))); // NOI18N
        btnBusquedaEjemplar.setCornerRound(10);
        btnBusquedaEjemplar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBusquedaEjemplarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelBusquedaEjemplarLayout = new javax.swing.GroupLayout(panelBusquedaEjemplar);
        panelBusquedaEjemplar.setLayout(panelBusquedaEjemplarLayout);
        panelBusquedaEjemplarLayout.setHorizontalGroup(
            panelBusquedaEjemplarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaEjemplarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textBusquedaEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBusquedaEjemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelBusquedaEjemplarLayout.setVerticalGroup(
            panelBusquedaEjemplarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaEjemplarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBusquedaEjemplarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBusquedaEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textBusquedaEjemplar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelInformacionLayout = new javax.swing.GroupLayout(panelInformacion);
        panelInformacion.setLayout(panelInformacionLayout);
        panelInformacionLayout.setHorizontalGroup(
            panelInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInformacionLayout.createSequentialGroup()
                        .addComponent(panelBusquedaEjemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelInformacionLayout.setVerticalGroup(
            panelInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacionLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(panelBusquedaEjemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane4.setViewportView(panelInformacion);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBusquedaEjemplarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBusquedaEjemplarMouseClicked
        // TODO add your handling code here:
        buscarEjemplar(campoBusquedaTemp);
        campoBusquedaTemp = "";
    }//GEN-LAST:event_btnBusquedaEjemplarMouseClicked

    private void textBusquedaEjemplarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBusquedaEjemplarKeyReleased
        // TODO add your handling code here:
        campoBusquedaTemp = textBusquedaEjemplar.getText();
    }//GEN-LAST:event_textBusquedaEjemplarKeyReleased

    private void textBusquedaEjemplarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBusquedaEjemplarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            buscarEjemplar(textBusquedaEjemplar.getText());
        }
    }//GEN-LAST:event_textBusquedaEjemplarKeyPressed

    private void textBusquedaEjemplarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textBusquedaEjemplarFocusLost
        // TODO add your handling code here:
        textBusquedaEjemplar.setText(defaultText);
        textBusquedaEjemplar.setForeground(Colores.campoTextSinFocus);
    }//GEN-LAST:event_textBusquedaEjemplarFocusLost

    private void textBusquedaEjemplarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textBusquedaEjemplarFocusGained
        // TODO add your handling code here:
        textBusquedaEjemplar.setText("");
        textBusquedaEjemplar.setForeground(Colores.letraNormal);
    }//GEN-LAST:event_textBusquedaEjemplarFocusGained

    private void tablaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlumnosMouseClicked
        int row = tablaAlumnos.rowAtPoint(evt.getPoint());
        int col = tablaAlumnos.columnAtPoint(evt.getPoint());

        TableModel tableModel = tablaAlumnos.getModel();
    }//GEN-LAST:event_tablaAlumnosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameHistorial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnBadStatus;
    private com.mommoo.flat.button.FlatButton btnBusquedaEjemplar;
    private javax.swing.JLabel btnGoodStatus;
    private javax.swing.JLabel btnRegularStatus;
    private org.jdesktop.swingx.painter.GlossPainter glossPainter1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel panelBusquedaEjemplar;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPanel panelEstadoInicial;
    private javax.swing.JPanel panelEstadoInicialParent;
    private javax.swing.JPanel panelInformacion;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JLabel textAsignaturaEjemplar;
    private javax.swing.JTextField textBusquedaEjemplar;
    private javax.swing.JLabel textCodigoEjemplar;
    private javax.swing.JLabel textCursoEjemplar;
    private javax.swing.JLabel textNombreEjemplar;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo que utilizamos para buscar un ejemplar en la base de datos
     */
    public void buscarEjemplar(String codigo) {
        if (!codigo.equals("") || codigo.equals(defaultText)) {
            //Se ha insertado un codigo

            SwingWorker<?, ?> worker = new SwingWorker<Void, Void>() {

                //RemarcarCeldas remarcarCeldas = new RemarcarCeldas(daoCurso);
                protected Void doInBackground() throws InterruptedException {
                    ejemplar = daoEjemplar.buscar(codigo);
                    return null;
                }

                protected void done() {
                    framePopup.dispose();

                    if (ejemplar != null) {
                        rellenarDatosEjemplar(ejemplar);
                    } else {
                        vaciarDatosEjemplar();
                        new FramePopup(topFrame, "No existe ning√∫n ejemplar con el c√≥digo introducido.",
                                Imagenes.getImagen("alert-black.png"),
                                "Aceptar").setVisible(true);
                    }

                }
            };
            worker.execute();
            framePopup = new FramePopup(this, "Cargando datos...");
            framePopup.setVisible(true);
            //alumno = listaAlumnos.stream().filter(a -> a.getNia().equals(nia)).collect(Collectors.toList()).get(0);
        } else {
            //No se ha insertado ningun valor en el campo de texto
            vaciarDatosEjemplar();
            new FramePopup(this, "El c√≥digo del ejemplar no puede ser un campo vac√≠o.",
                    Imagenes.getImagen("alert-black.png"),
                    "Aceptar").setVisible(true);
        }
    }

    /**
     * Metodo para vaciar los datos del ejemplar
     */
    public void vaciarDatosEjemplar() {
        textCodigoEjemplar.setText("");
        textCursoEjemplar.setText("");
        textNombreEjemplar.setText("");
        textAsignaturaEjemplar.setText("");
        setEstado(-1);
        vaciarTablaHistoriales();
    }

    /**
     * Metodo para rellenar los datos del ejemplar
     */
    public void rellenarDatosEjemplar(Ejemplar ejemplar) {
        //ejemplar = sustituirPadreCurso(ejemplar);

        textCodigoEjemplar.setText(ejemplar.getCodigo());
        textCursoEjemplar.setText(ejemplar.getLibro().getContenido().getCurso().toString());
        textNombreEjemplar.setText(ejemplar.getLibro().getNombre());
        textAsignaturaEjemplar.setText(ejemplar.getLibro().getContenido().getNombre_cas());
        setEstado(ejemplar.getEstado());

        rellenarTablaHistoriales(ejemplar);
    }

    /**
     * Metodo para pintar la imagen del estado del ejemplar
     *
     * @param estado
     */
    public void setEstado(int estado) {

        switch (estado) {
            case Estado.deteriorado:
                //El libro se encuentra en mal estado

                btnBadStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/bad.png")));               //Bad face
                btnRegularStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/regular_disabled.png")));  //Regular face
                btnGoodStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/good_disabled.png")));     //Good face
                break;

            case Estado.usado:
                //El libro se encuentra en mal estado

                btnBadStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/bad_disabled.png")));     //Bad face
                btnRegularStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/regular.png")));          //Regular face
                btnGoodStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/good_disabled.png")));    //Good face
                break;

            case Estado.nuevo:
                //El libro se encuentra en mal estado

                btnBadStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/bad_disabled.png")));     //Bad face
                btnRegularStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/regular_disabled.png"))); //Regular face
                btnGoodStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/good.png")));             //Good face
                break;
            default:
                btnBadStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/bad_disabled.png")));     //Bad face
                btnRegularStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/regular_disabled.png"))); //Regular face
                btnGoodStatus.setIcon(new ImageIcon(
                        getClass().getResource("/Imagenes/good_disabled.png")));             //Good face
        }
    }

    /**
     * Metodo para rellenar la tabla de los historiales de un ejemplar
     *
     * @param ejemplar
     */
    private void rellenarTablaHistoriales(Ejemplar ejemplar) {
        //ejemplar = sustituirPadresCursos(ejemplar);

        listaHistoriales = ejemplar.getHistoriales();

        DefaultTableModel tableModel;

        if (listaHistoriales.size() > 0) {
            Object[][] contenidoTabla = new Object[listaHistoriales.size()][4];

            for (int i = 0; i < listaHistoriales.size(); i++) {
                Alumno al = listaHistoriales.get(i).getAlumno();
                contenidoTabla[i][0] = al.getNia();
                contenidoTabla[i][1] = al.getNombre() + " " + al.getApellido1() + " " + al.getApellido2();
                contenidoTabla[i][2] = al.getCurso();
                contenidoTabla[i][3] = al.getEmail1();
            }

            tableModel = new DefaultTableModel(contenidoTabla,
                    new Object[]{"NIA", "Nombre y Apellidos", "Curso", "Email"}) {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    };
        } else {
            tableModel = new DefaultTableModel(null,
                    new Object[]{"NIA", "Nombre y Apellidos", "Curso", "Email"}) {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    };
        }

        tablaAlumnos.setModel(tableModel);

        if (tableModel.getRowCount() > 0) {
            /*
             //<editor-fold defaultstate="collapsed" desc="Edicion visual de la tabla">
             TableColumnModel tcm = tablaAlumnos.getColumnModel();
             tcm.getColumn(0).setMaxWidth(150);
             tcm.getColumn(0).setMinWidth(100);
             tcm.getColumn(0).setPreferredWidth(150);

             tcm.getColumn(1).setMinWidth(250);
             tcm.getColumn(2).setMinWidth(50);

             tcm.getColumn(3).setMaxWidth(125);
             tcm.getColumn(3).setMinWidth(125);
             //</editor-fold>*/

        } else {
            new FramePopup(this, "Este ejemplar no tiene historial todav√≠a",
                    Imagenes.getImagen("alert-black.png"),
                    "Aceptar").setVisible(true);
        }
    }

    private void vaciarTablaHistoriales() {
        DefaultTableModel model = new DefaultTableModel(null, new Object[]{"NIA", "Nombre", "Curso", "Email"});
        tablaAlumnos.setModel(model);
    }

    /**
     * Metodo para buscar el Padre del Curso y sustituir el atributo idPadre por
     * el nombre del Padre
     */
    private Ejemplar sustituirPadreCurso(Ejemplar e) {
        Curso curso = e.getLibro().getContenido().getCurso();
        Curso cursoPadre = daoCurso.buscar(curso.getIdPadre());

        if (cursoPadre != null) {
            curso.setNombre_padre(daoCurso.buscar(curso.getIdPadre()).getNombre_cas());
            e.getLibro().getContenido().setCurso(curso);
        }

        return e;
    }

    /**
     * Metodo para buscar el Padre de cada Curso y sustituir el atributo idPadre
     * por el nombre del Padre
     */
    private Ejemplar sustituirPadresCursos(Ejemplar e) {
        List<Historial> historiales = e.getHistoriales();

        for (int i = 0; i < historiales.size(); i++) {
            Curso curso = historiales.get(i).getEjemplar().getLibro().getContenido().getCurso();
            Curso cursoPadre = daoCurso.buscar(curso.getIdPadre());

            if (cursoPadre != null) {
                curso.setNombre_padre(daoCurso.buscar(curso.getIdPadre()).getNombre_cas());
                historiales.get(i).getEjemplar().getLibro().getContenido().setCurso(curso);
            }
        }

        e.setHistoriales(historiales);

        return e;
    }

    /*

     private void seleccionarAlumno() {
     Curso c = alumno.getCurso();
     cbCurso.setSelectedItem(c);
     }

     private void cargarDatosAlumno() {

     if (alumno != null) {

     textNIAAlumno.setText(alumno.getNia());
     textNombreAlumno.setText(alumno.getNombre() + " " + alumno.getApellido1());
     textNombreAlumno.setToolTipText(alumno.getNombre() + " " + alumno.getApellido1());
     textEmail.setText(alumno.getEmail1());
     textCursoActual.setText(alumno.getCurso().getAbreviatura() + " - " + sustituirPadre(alumno.getCurso()).getIdPadre());

     textTelefono.setText(alumno.getTelefono1());

     cargarHitoriales(alumno);

     } else {
     new FramePopup(this, "El alumno no esta matriculado en este curso escolar",
     Imagenes.getImagen("alert-black.png"),
     "Aceptar").setVisible(true);
     }
     }

     private void rellenarLista(Curso curso) {
     List<Alumno> listaAlumnosCurso = listaAlumnos.stream().filter(a -> a.getCurso().equals(curso)).collect(Collectors.toList());
     DefaultListModel listModel = new DefaultListModel();
     for (int i = 0; i < listaAlumnosCurso.size(); i++) {
     listModel.addElement(listaAlumnosCurso.get(i));
     }
     jlistAlumnos.setModel(listModel);
     }

     private Curso sustituirPadre(Curso curso) {
     Curso c = curso;
     Curso cursoPadre = daoCurso.buscar(c.getIdPadre());

     if (cursoPadre != null) {
     c.setNombre_padre(daoCurso.buscar(c.getIdPadre()).getNombre_cas());
     }
     return c;
     }

     private void sustituirPadresCursos() {
     for (int i = 0; i < listaCursos.size(); i++) {
     Curso curso = listaCursos.get(i);
     Curso cursoPadre = daoCurso.buscar(curso.getIdPadre());

     if (cursoPadre != null) {
     curso.setNombre_padre(daoCurso.buscar(curso.getIdPadre()).getNombre_cas());
     }
     }
     }

     public void rellenarCursos() {

     cbCurso.removeAllItems();

     //cbCurso.addItem(new Curso("Seleccione curso", "Seleccione curso", "Seleccione curso", "Seleccione curso", "Seleccione curso", " "));
     //Rellenamos los cursos
     if (listaCursos.size() > 0) {
     for (int i = 0; i < listaCursos.size(); i++) {
     cbCurso.addItem(listaCursos.get(i));
     }
     } else {
     new FramePopup(this, "No hay cursos en la base de datos.",
     Imagenes.getImagen("alert-black.png"),
     "Aceptar").setVisible(true);
     }
     rellenarLista((Curso) cbCurso.getSelectedItem());
     //cbCurso.setSelectedIndex(0);
     }

     public void cargarHitoriales(Alumno alumno) {
     SwingWorker<?, ?> worker = new SwingWorker<Void, Void>() {

     protected Void doInBackground() throws InterruptedException {
     listaHistorial = daoHistorial.buscarPorAlumno(alumno);
     return null;
     }

     protected void done() {
     rellenarTablaHistoriales();
     framePopup.dispose();
     }
     };
     worker.execute();
     framePopup = new FramePopup(this);
     }

     public void rellenarTablaHistoriales() {
     DefaultTableModel tableModel;

     if (listaHistorial.size() > 0) {
     Object[][] contenidoTabla = new Object[listaHistorial.size()][4];

     for (int i = 0; i < listaHistorial.size(); i++) {
     contenidoTabla[i][0] = listaHistorial.get(i);
     contenidoTabla[i][1] = listaHistorial.get(i);
     contenidoTabla[i][2] = listaHistorial.get(i);
     contenidoTabla[i][3] = listaHistorial.get(i);
     }

     tableModel = new DefaultTableModel(contenidoTabla,
     new Object[]{"C√≥digo Ejemplar", "Nombre del Ejemplar", "Curso", "Curso Escolar"}) {
     @Override
     public boolean isCellEditable(int row, int column) {
     return false;
     }
     };
     } else {
     tableModel = new DefaultTableModel(null,
     new Object[]{"C√≥digo Ejemplar", "Nombre del Ejemplar", "Curso", "Curso Escolar"}) {
     @Override
     public boolean isCellEditable(int row, int column) {
     return false;
     }
     };
     }

     tablaAlumnos.setModel(tableModel);

     if (tableModel.getRowCount() > 0) {

     //<editor-fold defaultstate="collapsed" desc="Edicion visual de la tabla">
     TableColumnModel tcm = tablaAlumnos.getColumnModel();
     tcm.getColumn(0).setMaxWidth(150);
     tcm.getColumn(0).setMinWidth(100);
     tcm.getColumn(0).setPreferredWidth(150);

     tcm.getColumn(1).setMinWidth(150);
     tcm.getColumn(2).setMinWidth(250);

     tcm.getColumn(3).setMaxWidth(125);
     tcm.getColumn(3).setMinWidth(125);
     //</editor-fold>

     //<editor-fold defaultstate="collapsed" desc="Mostrar texto en las celdas de las tablas">
     SwingWorker<?, ?> worker = new SwingWorker<Void, Void>() {

     RemarcarCeldas remarcarCeldas = new RemarcarCeldas(daoCurso);

     protected Void doInBackground() throws InterruptedException {
     for (int i = 0; i < tableModel.getColumnCount(); i++) {
     tcm.getColumn(i).setCellRenderer(remarcarCeldas);
     }
     return null;
     }

     protected void done() {
     framePopup.dispose();
     }
     };
     worker.execute();

     framePopup = new FramePopup(this, "Cargando datos...");
     framePopup.setVisible(true);
     //</editor-fold>

     } else {
     new FramePopup(this, "Este alumno no tiene historial todav√≠a",
     Imagenes.getImagen("alert-black.png"),
     "Aceptar").setVisible(true);
     }
     }

     public void showFrameInfo(Historial historial) {
     //Mostrar la vista del click 
     new FrameDetallesEjemplar(historial.getEjemplar()).setVisible(true);
     }

     */
}
