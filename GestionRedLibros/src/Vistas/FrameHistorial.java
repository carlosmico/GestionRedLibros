/*
 * Copyright (C) 2019 Jose Sanchis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package Vistas;

import Daos.DaoAlumno;
import Daos.DaoCurso;
import Daos.DaoHistorial;
import Pojos.Alumno;
import Pojos.Curso;
import Pojos.Ejemplar;
import Pojos.Historial;
import Renders.RemarcarCeldas;
import Renders.comboBoxRender;
import Utilidades.Colores;
import Utilidades.Imagenes;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.SwingWorker;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Jose Sanchis
 */
public class FrameHistorial extends javax.swing.JFrame {

    //Cremaos el frame de Cargar
    private FramePopup framePopup;

    //Creamos el DAO del Alumno y Matricula
    private DaoAlumno daoAlumno;
    private DaoHistorial daoHistorial;
    private DaoCurso daoCurso;

    //Creamos el Alumno
    public Alumno alumno;

    //Creamos el historial
    public static Historial historial;

    //Listas
    public List<Alumno> listaAlumnos;
    public List<Curso> listaCursos;
    public List<Historial> listaHistorial;

    public static boolean isCellSelected = false;

    private String defaultText = "Escribe NIA...";

    /**
     * Creates new form FrameDevoluciones
     */
    public FrameHistorial() {
        initComponents();
        //<editor-fold defaultstate="collapsed" desc="Configuracion Tabbed PAne">
        //tabbedPage.setIconAt(1, new ImageIcon(getClass().getResource("/Imagenes/icons/clipboard-arrow-down-outline.png")));
        //</editor-fold>

        //<editor-fold defaultstate="collapsed" desc="Configuración combobox">
        cbCurso.setEditable(false);
        cbCurso.setUI(new comboBoxRender());
        cbCurso.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index,
                    boolean isSelected, boolean hasFocus) {
                JLabel l = (JLabel) super.getListCellRendererComponent(
                        list, value, index, isSelected, hasFocus);
                if (isSelected) {
                    l.setForeground(Colores.fondo);
                    l.setBackground(Colores.buttons);
                } else {
                    l.setForeground(Colores.buttons);
                    l.setBackground(Colores.fondo);
                }
                return l;
            }
        });
//</editor-fold>

        daoAlumno = new DaoAlumno(Main.gestorSesiones.getSession());
        daoCurso = new DaoCurso(Main.gestorSesiones.getSession());
        daoHistorial = new DaoHistorial(Main.gestorSesiones.getSession());

        this.setLocationRelativeTo(null);

        //Maximizamos la pestaña
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);

        cargarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        glossPainter1 = new org.jdesktop.swingx.painter.GlossPainter();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelLista = new javax.swing.JPanel();
        panelBusquedaNIA = new javax.swing.JPanel();
        textBusquedaNIA = new javax.swing.JTextField();
        btnBusquedaNIA = new com.mommoo.flat.button.FlatButton();
        panelBusquedaLista = new javax.swing.JPanel();
        cbCurso = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlistAlumnos = new javax.swing.JList();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelInformacion = new javax.swing.JPanel();
        panelInfoGeneral = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        textNIAAlumno = new javax.swing.JLabel();
        textNombreAlumno = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        textEmail = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textCursoActual = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        textTelefono = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        imgSexo = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHistoriales = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Opciones");
        setMinimumSize(new java.awt.Dimension(600, 36));

        jPanel1.setBackground(Colores.accent);
        jPanel1.setPreferredSize(new java.awt.Dimension(1137, 75));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(Colores.fondo);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Historial");
        jLabel1.setPreferredSize(new java.awt.Dimension(122, 75));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(Colores.accent);

        panelLista.setBackground(Colores.fondo);
        panelLista.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelLista.setMaximumSize(new java.awt.Dimension(450, 32767));
        panelLista.setMinimumSize(new java.awt.Dimension(400, 0));

        panelBusquedaNIA.setBackground(Colores.fondo);

        textBusquedaNIA.setBackground(Colores.fondo);
        textBusquedaNIA.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textBusquedaNIA.setForeground(Colores.accent);
        textBusquedaNIA.setText("Codigo NIA");
        textBusquedaNIA.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        textBusquedaNIA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textBusquedaNIAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textBusquedaNIAFocusLost(evt);
            }
        });
        textBusquedaNIA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textBusquedaNIAKeyPressed(evt);
            }
        });

        btnBusquedaNIA.setBackground(Colores.buttons);
        btnBusquedaNIA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons/magnify.png"))); // NOI18N
        btnBusquedaNIA.setCornerRound(10);
        btnBusquedaNIA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBusquedaNIAMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelBusquedaNIALayout = new javax.swing.GroupLayout(panelBusquedaNIA);
        panelBusquedaNIA.setLayout(panelBusquedaNIALayout);
        panelBusquedaNIALayout.setHorizontalGroup(
            panelBusquedaNIALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaNIALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textBusquedaNIA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBusquedaNIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelBusquedaNIALayout.setVerticalGroup(
            panelBusquedaNIALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaNIALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBusquedaNIALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBusquedaNIA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textBusquedaNIA))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBusquedaLista.setBackground(Colores.fondo);

        cbCurso.setBackground(Colores.accent);
        cbCurso.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cbCurso.setPreferredSize(new java.awt.Dimension(374, 34));
        cbCurso.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCursoItemStateChanged(evt);
            }
        });

        jlistAlumnos.setBackground(Colores.fondo);
        jlistAlumnos.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlistAlumnos.setForeground(Colores.accent);
        jlistAlumnos.setSelectionBackground(Colores.accent);
        jlistAlumnos.setSelectionForeground(Colores.fondo);
        jlistAlumnos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlistAlumnosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jlistAlumnos);

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setForeground(Colores.accent);
        jLabel10.setText("Listado de alumnos:");

        javax.swing.GroupLayout panelBusquedaListaLayout = new javax.swing.GroupLayout(panelBusquedaLista);
        panelBusquedaLista.setLayout(panelBusquedaListaLayout);
        panelBusquedaListaLayout.setHorizontalGroup(
            panelBusquedaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBusquedaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(panelBusquedaListaLayout.createSequentialGroup()
                        .addGroup(panelBusquedaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(cbCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelBusquedaListaLayout.setVerticalGroup(
            panelBusquedaListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelListaLayout = new javax.swing.GroupLayout(panelLista);
        panelLista.setLayout(panelListaLayout);
        panelListaLayout.setHorizontalGroup(
            panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelBusquedaLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBusquedaNIA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jSeparator2)
        );
        panelListaLayout.setVerticalGroup(
            panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBusquedaNIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBusquedaLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(panelLista);

        jScrollPane4.setBorder(null);
        jScrollPane4.setMinimumSize(new java.awt.Dimension(250, 18));

        panelInformacion.setBackground(Colores.fondo);
        panelInformacion.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelInformacion.setMinimumSize(new java.awt.Dimension(720, 0));
        panelInformacion.setPreferredSize(new java.awt.Dimension(720, 500));

        panelInfoGeneral.setBackground(Colores.fondo);
        panelInfoGeneral.setMaximumSize(new java.awt.Dimension(300, 32767));
        panelInfoGeneral.setPreferredSize(new java.awt.Dimension(922, 170));

        jLabel3.setBackground(Colores.accent);
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(Colores.accent);
        jLabel3.setText("Información");

        jPanel5.setBackground(Colores.fondo);

        jPanel6.setBackground(Colores.fondo);
        jPanel6.setPreferredSize(new java.awt.Dimension(350, 126));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setForeground(Colores.accent);
        jLabel7.setLabelFor(textNIAAlumno);
        jLabel7.setText("NIA:");

        textNIAAlumno.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textNIAAlumno.setForeground(new java.awt.Color(51, 51, 51));
        textNIAAlumno.setPreferredSize(new java.awt.Dimension(402, 24));

        textNombreAlumno.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textNombreAlumno.setForeground(new java.awt.Color(51, 51, 51));
        textNombreAlumno.setPreferredSize(new java.awt.Dimension(402, 24));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(Colores.accent);
        jLabel4.setLabelFor(textNombreAlumno);
        jLabel4.setText("Nombre y Apellidos:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textNIAAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textNombreAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNIAAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNombreAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(Colores.fondo);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setForeground(Colores.accent);
        jLabel9.setText("Correo electrónico:");

        textEmail.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textEmail.setForeground(new java.awt.Color(51, 51, 51));
        textEmail.setPreferredSize(new java.awt.Dimension(402, 24));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setForeground(Colores.accent);
        jLabel11.setText("Curso Actual:");

        textCursoActual.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textCursoActual.setForeground(new java.awt.Color(51, 51, 51));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel12.setForeground(Colores.accent);
        jLabel12.setText("Teléfono:");

        textTelefono.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textTelefono.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(textTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(textCursoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textTelefono))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textCursoActual)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setForeground(Colores.fondo);
        jPanel7.setPreferredSize(new java.awt.Dimension(128, 128));

        imgSexo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgSexo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/person-flat.png"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgSexo, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgSexo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelInfoGeneralLayout = new javax.swing.GroupLayout(panelInfoGeneral);
        panelInfoGeneral.setLayout(panelInfoGeneralLayout);
        panelInfoGeneralLayout.setHorizontalGroup(
            panelInfoGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInfoGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(panelInfoGeneralLayout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        panelInfoGeneralLayout.setVerticalGroup(
            panelInfoGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaHistoriales.setAutoCreateRowSorter(true);
        tablaHistoriales.setBackground(Colores.fondo);
        tablaHistoriales.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tablaHistoriales.setForeground(Colores.accent);
        tablaHistoriales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código ejemplar", "Nombre de ejemplar", "Curso", "Curso escolar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaHistoriales.setRowHeight(32);
        tablaHistoriales.setRowSelectionAllowed(false);
        tablaHistoriales.setSelectionBackground(Colores.accent);
        tablaHistoriales.setSelectionForeground(Colores.fondo);
        tablaHistoriales.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaHistoriales.getTableHeader().setReorderingAllowed(false);
        tablaHistoriales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaHistorialesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaHistoriales);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelInformacionLayout = new javax.swing.GroupLayout(panelInformacion);
        panelInformacion.setLayout(panelInformacionLayout);
        panelInformacionLayout.setHorizontalGroup(
            panelInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacionLayout.createSequentialGroup()
                .addGroup(panelInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInformacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panelInfoGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 1120, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelInformacionLayout.setVerticalGroup(
            panelInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacionLayout.createSequentialGroup()
                .addComponent(panelInfoGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane4.setViewportView(panelInformacion);

        jSplitPane1.setRightComponent(jScrollPane4);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1540, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1540, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textBusquedaNIAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textBusquedaNIAFocusGained
        // TODO add your handling code here:
        textBusquedaNIA.setText("");
        textBusquedaNIA.setForeground(Colores.accent);
    }//GEN-LAST:event_textBusquedaNIAFocusGained

    private void textBusquedaNIAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textBusquedaNIAFocusLost
        // TODO add your handling code here:
        textBusquedaNIA.setText(defaultText);
        textBusquedaNIA.setForeground(new Color(102, 102, 102));
    }//GEN-LAST:event_textBusquedaNIAFocusLost

    private void textBusquedaNIAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBusquedaNIAKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            buscarAlumno(textBusquedaNIA.getText());
            jlistAlumnos.requestFocus();
        }
    }//GEN-LAST:event_textBusquedaNIAKeyPressed

    private void cbCursoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCursoItemStateChanged
        // TODO add your handling code here:
        alumno = null;
        rellenarLista((Curso) cbCurso.getSelectedItem());
    }//GEN-LAST:event_cbCursoItemStateChanged

    private void jlistAlumnosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlistAlumnosValueChanged
        // TODO add your handling code here:
        if (jlistAlumnos.getModel().getSize() > 0) {
            alumno = (Alumno) jlistAlumnos.getSelectedValue();
            cargarDatosAlumno();
        } else {
            //vaciar campos
        }
    }//GEN-LAST:event_jlistAlumnosValueChanged

    private void btnBusquedaNIAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBusquedaNIAMouseClicked
        // TODO add your handling code here:
        buscarAlumno(textBusquedaNIA.getText());
    }//GEN-LAST:event_btnBusquedaNIAMouseClicked

    private void tablaHistorialesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaHistorialesMouseClicked
        int row = tablaHistoriales.rowAtPoint(evt.getPoint());
        int col = tablaHistoriales.columnAtPoint(evt.getPoint());

        TableModel tableModel = tablaHistoriales.getModel();

        historial = (Historial) tableModel.getValueAt(row, col);
        showFrameInfo(historial);
    }//GEN-LAST:event_tablaHistorialesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameHistorial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mommoo.flat.button.FlatButton btnBusquedaNIA;
    private javax.swing.JComboBox cbCurso;
    private org.jdesktop.swingx.painter.GlossPainter glossPainter1;
    private javax.swing.JLabel imgSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JList jlistAlumnos;
    private javax.swing.JPanel panelBusquedaLista;
    private javax.swing.JPanel panelBusquedaNIA;
    private javax.swing.JPanel panelInfoGeneral;
    private javax.swing.JPanel panelInformacion;
    private javax.swing.JPanel panelLista;
    private javax.swing.JTable tablaHistoriales;
    private javax.swing.JTextField textBusquedaNIA;
    private javax.swing.JLabel textCursoActual;
    private javax.swing.JLabel textEmail;
    private javax.swing.JLabel textNIAAlumno;
    private javax.swing.JLabel textNombreAlumno;
    private javax.swing.JLabel textTelefono;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo que utilizamos para buscar un alumno en la base de datos
     *
     * @param nia Deberemos pasarle el NIA del alumno
     */
    public void buscarAlumno(String nia) {
        if (!nia.equals("") || nia.equals(defaultText)) {
            //Se ha insertado un codigo

            SwingWorker<?, ?> worker = new SwingWorker<Void, Void>() {

                RemarcarCeldas remarcarCeldas = new RemarcarCeldas();

                protected Void doInBackground() throws InterruptedException {
                    alumno = daoAlumno.buscar(nia);
                    return null;
                }

                protected void done() {
                    framePopup.dispose();

                    if (alumno != null) {
                        sustituirPadre(alumno.getCurso());
                        cargarDatosAlumno();

                        seleccionarAlumno();

                        for (int i = 0; i < jlistAlumnos.getModel().getSize(); i++) {
                            Alumno alumnot = (Alumno) jlistAlumnos.getModel().getElementAt(i);
                            if (alumnot.getNia().equals(nia)) {
                                jlistAlumnos.setSelectedIndex(i);
                            }
                        }
                    } else {
                        new FramePopup("No existe ningún alumno con el NIA introducido.",
                                Imagenes.getImagen("alert-black.png"),
                                "Aceptar").setVisible(true);
                    }

                }
            };
            worker.execute();
            framePopup = new FramePopup("Cargando datos...");
            framePopup.setVisible(true);
            //alumno = listaAlumnos.stream().filter(a -> a.getNia().equals(nia)).collect(Collectors.toList()).get(0);
        } else {
            //No se ha insertado ningun valor en el campo de texto
            new FramePopup("El NIA no puede ser un campo vacío.",
                    Imagenes.getImagen("alert-black.png"),
                    "Aceptar").setVisible(true);
        }

    }

    /**
     * Metodo utilizado para seleccionar el alumno en la lista cuando lo
     * buscamos por NIA
     */
    private void seleccionarAlumno() {
        Curso c = alumno.getCurso();
        cbCurso.setSelectedItem(c);
    }

    /**
     * Este metodo se utiliza para cargar los datos de el alumno encontrado
     * anteriormente.
     */
    private void cargarDatosAlumno() {

        if (alumno != null) {

            textNIAAlumno.setText(alumno.getNia());
            textNombreAlumno.setText(alumno.getNombre() + " " + alumno.getApellido1());
            textNombreAlumno.setToolTipText(alumno.getNombre() + " " + alumno.getApellido1());
            textEmail.setText(alumno.getEmail1());
            textCursoActual.setText(alumno.getCurso().getAbreviatura() + " - " + sustituirPadre(alumno.getCurso()).getIdPadre());

            textTelefono.setText(alumno.getTelefono1());

            cargarHitoriales(alumno);

        } else {
            new FramePopup("El alumno no esta matriculado en este curso escolar",
                    Imagenes.getImagen("alert-black.png"),
                    "Aceptar").setVisible(true);
        }
    }

    /**
     * Metodo para buscar el Padre de cada Curso y sustituir el atributo idPadre
     * por el nombre del Padre
     */
    private Curso sustituirPadre(Curso curso) {
        Curso c = curso;
        Curso cursoPadre = daoCurso.buscar(c.getIdPadre());

        if (cursoPadre != null) {
            c.setIdPadre(daoCurso.buscar(c.getIdPadre()).getNombre_cas());
        }
        return c;
    }

    /**
     * Metodo que utilizamos para rellenar la lista de alumnos dependiendo del
     * curso seleccionado
     *
     * @param curso Curso seleccionado en el comboBox
     */
    private void rellenarLista(Curso curso) {
        List<Alumno> listaAlumnosCurso = listaAlumnos.stream().filter(a -> a.getCurso().equals(curso)).collect(Collectors.toList());
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < listaAlumnosCurso.size(); i++) {
            listModel.addElement(listaAlumnosCurso.get(i));
        }
        jlistAlumnos.setModel(listModel);
    }

    /**
     * Metodo para buscar el Padre de cada Curso y sustituir el atributo idPadre
     * por el nombre del Padre
     */
    private void sustituirPadresCursos() {
        for (int i = 0; i < listaCursos.size(); i++) {
            Curso curso = listaCursos.get(i);
            Curso cursoPadre = daoCurso.buscar(curso.getIdPadre());

            if (cursoPadre != null) {
                curso.setIdPadre(daoCurso.buscar(curso.getIdPadre()).getNombre_cas());
            }
        }
    }

    /**
     * Cargamos los datos iniciales, como los alumnos o los cursos
     */
    public void cargarDatos() {
        SwingWorker<?, ?> worker = new SwingWorker<Void, Void>() {

            protected Void doInBackground() throws InterruptedException {
                listaAlumnos = daoAlumno.buscarTodos();
                listaCursos = daoCurso.buscarTodos();
                return null;
            }

            protected void done() {

                sustituirPadresCursos();
                rellenarCursos();

                framePopup.dispose();
            }
        };
        worker.execute();
        if (framePopup == null) {
            framePopup = new FramePopup();
        }
        framePopup.setVisible(true);
    }

    /**
     * Metodo para rellenar los cursos del combobox
     */
    public void rellenarCursos() {

        cbCurso.removeAllItems();

        //cbCurso.addItem(new Curso("Seleccione curso", "Seleccione curso", "Seleccione curso", "Seleccione curso", "Seleccione curso", " "));
        //Rellenamos los cursos
        if (listaCursos.size() > 0) {
            for (int i = 0; i < listaCursos.size(); i++) {
                cbCurso.addItem(listaCursos.get(i));
            }
        } else {
            new FramePopup("No hay cursos en la base de datos.",
                    Imagenes.getImagen("alert-black.png"),
                    "Aceptar").setVisible(true);
        }
        rellenarLista((Curso) cbCurso.getSelectedItem());
        //cbCurso.setSelectedIndex(0);
    }

    /**
     * Metodo para buscar todos los historiales del alumno
     *
     * @param alumno Objeto alumno para buscar su nia en los historiales
     */
    public void cargarHitoriales(Alumno alumno) {
        SwingWorker<?, ?> worker = new SwingWorker<Void, Void>() {

            protected Void doInBackground() throws InterruptedException {
                listaHistorial = daoHistorial.buscarPorAlumno(alumno);
                return null;
            }

            protected void done() {
                framePopup.dispose();
                rellenarTablaHistoriales();
            }
        };
        worker.execute();
        if (framePopup == null) {
            framePopup = new FramePopup();
        }
        framePopup.setVisible(true);
    }

    /**
     * Metodo para rellenar la tabla de historiales del alumno
     */
    public void rellenarTablaHistoriales() {
        DefaultTableModel tableModel;

        if (listaHistorial.size() > 0) {
            Object[][] contenidoTabla = new Object[listaHistorial.size()][4];

            for (int i = 0; i < listaHistorial.size(); i++) {
                contenidoTabla[i][0] = listaHistorial.get(i);
                contenidoTabla[i][1] = listaHistorial.get(i);
                contenidoTabla[i][2] = listaHistorial.get(i);
                contenidoTabla[i][3] = listaHistorial.get(i);
            }

            tableModel = new DefaultTableModel(contenidoTabla,
                    new Object[]{"Código Ejemplar", "Nombre del Ejemplar", "Curso", "Curso Escolar"}) {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    };
        } else {
            tableModel = new DefaultTableModel(null,
                    new Object[]{"Código Ejemplar", "Nombre del Ejemplar", "Curso", "Curso Escolar"}) {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    };
        }

        tablaHistoriales.setModel(tableModel);

        if (tableModel.getRowCount() > 0) {

            //<editor-fold defaultstate="collapsed" desc="Edicion visual de la tabla">
            TableColumnModel tcm = tablaHistoriales.getColumnModel();
            tcm.getColumn(0).setMaxWidth(150);
            tcm.getColumn(0).setMinWidth(100);
            tcm.getColumn(0).setPreferredWidth(150);

            tcm.getColumn(1).setMinWidth(150);
            tcm.getColumn(2).setMinWidth(250);

            tcm.getColumn(3).setMaxWidth(125);
            tcm.getColumn(3).setMinWidth(125);
//</editor-fold>

            //<editor-fold defaultstate="collapsed" desc="Mostrar texto en las celdas de las tablas">
            SwingWorker<?, ?> worker = new SwingWorker<Void, Void>() {

                RemarcarCeldas remarcarCeldas = new RemarcarCeldas();

                protected Void doInBackground() throws InterruptedException {
                    for (int i = 0; i < tableModel.getColumnCount(); i++) {
                        tcm.getColumn(i).setCellRenderer(remarcarCeldas);
                    }
                    return null;
                }

                protected void done() {

                    //remarcarCeldas.desconectarDao();
                    framePopup.dispose();
                }
            };
            worker.execute();

            framePopup = new FramePopup("Cargando datos...");
            framePopup.setVisible(true);
//</editor-fold>

        } else {
            new FramePopup("Este alumno no tiene historial todavía",
                    Imagenes.getImagen("alert-black.png"),
                    "Aceptar").setVisible(true);
        }
    }

    public void showFrameInfo(Historial historial) {
        //Mostrar la vista del click 

        new FramePopup("Se ha pulsado la fila",
                Imagenes.getImagen("alert-black.png"),
                "Aceptar").setVisible(true);

    }
}
